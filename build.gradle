plugins {
    id "java"
    id "antlr"
    id "application"
}

def mainClassName = "jga.example.antlr.Main"
def generatedSrcDir = "build/generated-src"
def generatedAntlrSrcPath = generatedSrcDir + "/main/antlr"

generateGrammarSource {
    outputDirectory = file(generatedAntlrSrcPath)
}

sourceSets.main.java.srcDir generatedAntlrSrcPath

repositories {
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.10"
    testImplementation "junit:junit:4.13.2"
}

application {
    mainClass = mainClassName
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task uberJar (type: Jar) {
  archiveClassifier = 'uber'
  manifest {
    attributes 'Main-Class': mainClassName
  }
  from {
    configurations.runtimeClasspath
      .findAll { it.name.endsWith('jar') }
      .collect { zipTree(it) }
  }
  with jar
}
